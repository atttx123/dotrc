# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

## Usage:
# link or copy this file to ~/.bashrc
# link or copy this folder to ~/.bashrc.d

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# ignoredups and ignorespace
HISTCONTROL=ignoreboth
shopt -s histappend
export HISTSIZE=1000000

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

BASHRCD=$HOME/.bashrc.d
USERBIN=$HOME/.bin
USERLOCALBIN=/usr/local/bin

PROMPT_COMMAND_FILE=$BASHRCD/ps1.sh

export EDITOR=vim
export PATH=$USERLOCALBIN:$USERBIN:$PATH:/usr/local/go/bin:/usr/sbin:/sbin

source_if_exist() {
    if [ -r "$1" ]; then
        . $1
    fi
}

source_if_exist $BASHRCD/rc.personal
source_if_exist $BASHRCD/git-completion.bash
source_if_exist $BASHRCD/mvn_bash_completion.bash

source_if_exist $BASHRCD/alias.common
case $(uname) in
    Linux)
	    source_if_exist $BASHRCD/alias.linux
		;;
	Darwin)
		source_if_exist $BASHRCD/alias.darwin
		;;
esac

_update_ps1() {
    PS1=$($PROMPT_COMMAND_FILE $?)
}
if [ -x "$PROMPT_COMMAND_FILE" ]; then
    PROMPT_COMMAND="_update_ps1"
fi

alias urldecode='python -c "import sys, urllib as ul; \
	    print ul.unquote_plus(sys.argv[1])"'

alias urlencode='python -c "import sys, urllib as ul; \
	    print ul.quote_plus(sys.argv[1])"'

#export PS1='\n\[\e[1;31m\][\w]\[\e[0m\] \[\e[1;35m\][ \[\e[1;36m\]$(/bin/ls -1 | /usr/bin/wc -l | sed "s: ::g") files \[\e[1;33m\]$(/bin/ls -lah | grep -m 1 total | sed "s/total //")b\[\e[0m\] \[\e[1;35m\]]\n`a=$?;if [ $a -ne 0 ]; then echo -ne "\[\e[01;36;41m\]{$a}"; fi`\[\e[01;36m\][\t \u]\[\e[00m\] \[\e[01;34m\]\W`[[ -d .git ]] && echo -ne "\[\e[33;40m\](branch:$(git branch | sed -e "/^ /d" -e "s/* \(.*\)/\1/"))\[\e[01;32m\]\[\e[00m\]"`\[\e[01;34m\] \$ \[\e[00m\]'
source_if_exist /usr/share/autojump/autojump.sh

unset BASHRCD
unset USERBIN
unset USERLOCALBIN
